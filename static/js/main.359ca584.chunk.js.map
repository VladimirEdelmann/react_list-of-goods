{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","this","isChangesMade","className","type","classNames","onClick","setState","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAuBzB,OApBIC,IAAaJ,EAASO,UACxBD,EAAaE,MACX,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,cAAcD,MAInDN,IAAaJ,EAASY,QACxBN,EAAaE,MACX,SAACC,EAAWC,GAAZ,OAA2BD,EAAUI,OAASH,EAAWG,UAKzDR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAvCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAMiB,EAAb,4MACEC,MAAyB,CACvBb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,4CAME,WAAU,IAAD,OACP,EAGIC,KAAKF,MAFPb,EADF,EACEA,WACAD,EAFF,EAEEA,SAGIiB,EAAgBhB,GAAcD,IAAaJ,EAASmB,KAE1D,OACE,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,iBACA,CAAE,WAAYpB,IAAaJ,EAASO,WAGxCkB,QAAS,kBAAM,EAAKC,SAAS,CAC3BtB,SAAUJ,EAASO,YATvB,iCAeA,wBACEgB,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,WAAYpB,IAAaJ,EAASY,SAGxCa,QAAS,kBAAM,EAAKC,SAAS,CAC3BtB,SAAUJ,EAASY,UATvB,4BAeA,wBACEW,KAAK,SACLD,UACEE,IACE,oBACA,CAAE,YAAanB,IAGnBoB,QAAS,kBAAM,EAAKC,UAAS,SAAAR,GAAK,MAAK,CACrCb,YAAaa,EAAMb,gBATvB,qBAgBEgB,GACE,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKC,SAAS,CAC3BrB,YAAY,EACZD,SAAUJ,EAASmB,QALvB,sBAcN,6BAEIjB,EACED,EAAiBmB,KAAKF,OACtBS,KAAI,SAAAC,GAAI,OAAK,oBAAe,UAAQ,OAAvB,mBAAkCA,IAAzBA,eAlFpC,GAAyBC,aC9DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.359ca584.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort goods if needed\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort(\n      (firstGood, secondGood) => firstGood.localeCompare(secondGood),\n    );\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort(\n      (firstGood, secondGood) => firstGood.length - secondGood.length,\n    );\n  }\n\n  // Reverse goods if needed\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const isChangesMade = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-info',\n                { 'is-light': sortType !== SortType.ALPHABET },\n              )\n            }\n            onClick={() => this.setState({\n              sortType: SortType.ALPHABET,\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-success',\n                { 'is-light': sortType !== SortType.LENGTH },\n              )\n            }\n            onClick={() => this.setState({\n              sortType: SortType.LENGTH,\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'button is-warning',\n                { 'is-light': !isReversed },\n              )\n            }\n            onClick={() => this.setState(state => ({\n              isReversed: !state.isReversed,\n            }))}\n          >\n            Reverse\n          </button>\n\n          {\n            isChangesMade && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => this.setState({\n                  isReversed: false,\n                  sortType: SortType.NONE,\n                })}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          {\n            getReorderedGoods(\n              goodsFromServer, this.state,\n            ).map(good => (<li key={good} data-cy=\"Good\">{`${good}`}</li>))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}